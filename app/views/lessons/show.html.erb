<%= content_for :javascripts do %>
      <script type='' src='/js/hls.min.js' data-turbolinks-track="reload"></script>
      <script defer>
        document.addEventListener('turbolinks:load', function() {
          var video = document.getElementById('video');
      if (Hls.isSupported()) {
        var hls = new Hls({
          debug: true,
          
        });
        hls.loadSource('<%= @article_info[:video] %>');
        hls.attachMedia(video);
        hls.on(Hls.Events.MEDIA_ATTACHED, function () {
          video.muted = true;
          video.play();
        });
      }
      // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
      // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element through the `src` property.
      // This is using the built-in support of the plain video element, without using hls.js.
      else if (video.canPlayType('application/vnd.apple.mpegurl')) {
        video.src = '';
        video.addEventListener('canplay', function () {
          video.play();
        });
      }
        });

      </script>
      <% end %>

      

<div class='tw-bg-white tw-my-4 tw-p-3 tw-rounded-sm'>
  <h1 class='tw-m-3 tw-text-lg'><%= @details.dig(:course, :title) %></h1>
  <p class='my-4 tw-text-gray-500 tw-text-sm'><%= @details.dig(:course, :subtitle) %></p>

  <div class="player">
      <video class='w-full' id="video" controls></video>

      
  </div>

  <hr class='tw-my-6' />


  <div class=' tw-w-full tw-overflow-auto tw-prose-base course-details'>
    <%== @article_info[:content] %>
  </div>
</div>
  